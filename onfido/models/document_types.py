# coding: utf-8

"""
    Onfido API v3.6

    The Onfido API (v3.6)

    The version of the OpenAPI document: v3.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class DocumentTypes(str, Enum):
    """
    DocumentTypes
    """

    """
    allowed enum values
    """
    PASSPORT = 'passport'
    DRIVING_LICENCE = 'driving_licence'
    NATIONAL_IDENTITY_CARD = 'national_identity_card'
    RESIDENCE_PERMIT = 'residence_permit'
    PASSPORT_CARD = 'passport_card'
    TAX_ID = 'tax_id'
    VISA = 'visa'
    VOTER_ID = 'voter_id'
    RESIDENCE_STATUS_DOCUMENT = 'residence_status_document'
    POSTAL_IDENTITY_CARD = 'postal_identity_card'
    SOCIAL_SECURITY_CARD = 'social_security_card'
    WORK_PERMIT = 'work_permit'
    ASYLUM_REGISTRATION_CARD = 'asylum_registration_card'
    NATIONAL_HEALTH_INSURANCE_CARD = 'national_health_insurance_card'
    MUNICIPALITY_IDENTITY_CARD = 'municipality_identity_card'
    PRIVATE_OPERATORS_CARD = 'private_operators_card'
    PROOF_OF_CITIZENSHIP = 'proof_of_citizenship'
    SERVICE_ID_CARD = 'service_id_card'
    IMMIGRATION_STATUS_DOCUMENT = 'immigration_status_document'
    INDIGENOUS_CARD = 'indigenous_card'
    VEHICLE_REGISTRATION_CARD = 'vehicle_registration_card'
    CERTIFICATE_OF_NATURALISATION = 'certificate_of_naturalisation'
    PROFESSIONAL_QUALIFICATION_CARD = 'professional_qualification_card'
    CONSULAR_ID = 'consular_id'
    INTERNATIONAL_DRIVING_LICENCE = 'international_driving_licence'
    HOME_OFFICE_LETTER = 'home_office_letter'
    BIRTH_CERTIFICATE = 'birth_certificate'
    VEHICLE_REGISTRATION_CERTIFICATE = 'vehicle_registration_certificate'
    FORM_FOR_AFFIXING_THE_VISA = 'form_for_affixing_the_visa'
    IDENTIFICATION_NUMBER_DOCUMENT = 'identification_number_document'
    ADOPTION_CERTIFICATE = 'adoption_certificate'
    BANK_BUILDING_SOCIETY_STATEMENT = 'bank_building_society_statement'
    BANK_STATEMENT = 'bank_statement'
    BENEFIT_LETTERS = 'benefit_letters'
    CBT = 'cbt'
    CERTIFICATE_OF_SPONSORSHIP = 'certificate_of_sponsorship'
    CHARACTER_REFERENCE = 'character_reference'
    CIVIL_PARTNERSHIP_CERTIFICATE = 'civil_partnership_certificate'
    COUNCIL_TAX = 'council_tax'
    CREDIT_CARD_STATEMENT = 'credit_card_statement'
    DEED_POLL = 'deed_poll'
    DIVORCE_ABSOLUTE_DECREE = 'divorce_absolute_decree'
    EDUCATIONAL_STATEMENT = 'educational_statement'
    ELECTRICITY_BILL = 'electricity_bill'
    GAS_BILL = 'gas_bill'
    GOVERNMENT_LETTER = 'government_letter'
    INTERNET_BILL = 'internet_bill'
    MARRIAGE_CERTIFICATE = 'marriage_certificate'
    MOTORCYCLE_INSURANCE = 'motorcycle_insurance'
    NATIONAL_INSURANCE_CARD = 'national_insurance_card'
    NATURALISATION_CERTIFICATE = 'naturalisation_certificate'
    NON_UK_DRIVING_LICENCE = 'non_uk_driving_licence'
    P45_P60 = 'p45_p60'
    PAYSLIP = 'payslip'
    PHONE_BILL = 'phone_bill'
    PROFESSIONAL_IDENTIFICATION_CARD = 'professional_identification_card'
    RIGHT_TO_WORK_SHARE_CODE_RESULT = 'right_to_work_share_code_result'
    STATEMENT_FACT = 'statement_fact'
    T4_STUDENT_UNIVERSITY_TERM_DATES_EVIDENCE = 't4_student_university_term_dates_evidence'
    UK_BIOMETRIC_RESIDENCE_PERMIT = 'uk_biometric_residence_permit'
    UK_DRIVING_LICENCE = 'uk_driving_licence'
    UNKNOWN = 'unknown'
    UTILITY_BILL = 'utility_bill'
    UTILITY_BILL_ELECTRIC = 'utility_bill_electric'
    UTILITY_BILL_GAS = 'utility_bill_gas'
    UTILITY_BILL_OTHER = 'utility_bill_other'
    WATER_BILL = 'water_bill'
    ADDRESS_CERTIFICATE = 'address_certificate'
    GENERAL_LETTER = 'general_letter'
    INSURANCE_STATEMENT = 'insurance_statement'
    PENSION_PROPERTY_STATEMENT_LETTER = 'pension_property_statement_letter'
    MORTGAGE_STATEMENT = 'mortgage_statement'
    MOBILE_PHONE_BILL = 'mobile_phone_bill'
    IDENTITY_DOCUMENT_WITH_ADDRESS = 'identity_document_with_address'
    EXCHANGE_HOUSE_STATEMENT = 'exchange_house_statement'
    ACCOMMODATION_TENANCY_CERTIFICATE = 'accommodation_tenancy_certificate'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of DocumentTypes from a JSON string"""
        return cls(json.loads(json_str))


