# coding: utf-8

"""
    Onfido API v3.6

    The Onfido API (v3.6)

    The version of the OpenAPI document: v3.6
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class DocumentTypes(str, Enum):
    """
    DocumentTypes
    """

    """
    allowed enum values
    """
    PASSPORT = 'passport'
    DRIVING_LICENCE = 'driving_licence'
    NATIONAL_IDENTITY_CARD = 'national_identity_card'
    RESIDENCE_PERMIT = 'residence_permit'
    PASSPORT_CARD = 'passport_card'
    TAX_ID = 'tax_id'
    VISA = 'visa'
    VOTER_ID = 'voter_id'
    RESIDENCE_STATUS_DOCUMENT = 'residence_status_document'
    POSTAL_IDENTITY_CARD = 'postal_identity_card'
    SOCIAL_SECURITY_CARD = 'social_security_card'
    WORK_PERMIT = 'work_permit'
    ASYLUM_REGISTRATION_CARD = 'asylum_registration_card'
    NATIONAL_HEALTH_INSURANCE_CARD = 'national_health_insurance_card'
    MUNICIPALITY_IDENTITY_CARD = 'municipality_identity_card'
    PRIVATE_OPERATORS_CARD = 'private_operators_card'
    PROOF_OF_CITIZENSHIP = 'proof_of_citizenship'
    SERVICE_ID_CARD = 'service_id_card'
    IMMIGRATION_STATUS_DOCUMENT = 'immigration_status_document'
    INDIGENOUS_CARD = 'indigenous_card'
    VEHICLE_REGISTRATION_CARD = 'vehicle_registration_card'
    CERTIFICATE_OF_NATURALISATION = 'certificate_of_naturalisation'
    PROFESSIONAL_QUALIFICATION_CARD = 'professional_qualification_card'
    CONSULAR_ID = 'consular_id'
    INTERNATIONAL_DRIVING_LICENCE = 'international_driving_licence'
    HOME_OFFICE_LETTER = 'home_office_letter'
    BIRTH_CERTIFICATE = 'birth_certificate'
    VEHICLE_REGISTRATION_CERTIFICATE = 'vehicle_registration_certificate'
    FORM_FOR_AFFIXING_THE_VISA = 'form_for_affixing_the_visa'
    IDENTIFICATION_NUMBER_DOCUMENT = 'identification_number_document'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of DocumentTypes from a JSON string"""
        return cls(json.loads(json_str))


